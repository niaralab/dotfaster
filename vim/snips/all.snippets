# /home/sergio/.dotfiles/rcfiles/vim/snips/all.snippets
priority 1

snippet today
`date +%c`
endsnippet

snippet date
${2:`date +%Y-%m-%d`}
endsnippet


snippet lorem "Lorem Ipsum - 50 Words" b
Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod
tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At
vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren,
no sea takimata sanctus est Lorem ipsum dolor sit amet.
${0: ctrl-j}
endsnippet

snippet snip "The Snippet Snippet"
snippet ${1:Trigger} "${2:Description}" ${3:Options}
${0}
`echo endsnippet`
endsnippet

snippet 'clip(board)?' "past clipboard" !r
`xclip -i -selection clipboard -o`
endsnippet

snippet primary "primary selection clipboard"
`xclip -i -selection primary -o`
endsnippet

snippet 75wrds "Log a 750words.com session" b
750words.com: ${1:750} words in ${2:20} minutes - `!p
snip.rv = fraction(t[1], t[2])
` wpm.
endsnippet

# snippet modeline "Modeline" b
# vim: set ft=${1:vim} ts=${2:8} sw=${3:4} tw=${4:0} noet :$0
# endsnippet

##########################
# VIM MODELINE GENERATOR #
##########################
# See advice on `:help 'tabstop'` for why these values are set. Uses second
# modeline form ('set') to work in languages with comment terminators
# (/* like C */).
snippet modeline "Vim modeline"
vim`!v ':set '. (&expandtab ? printf('et sw=%i ts=%i', &sw, &ts) : printf('noet sts=%i sw=%i ts=%i', &sts, &sw, &ts)) . (&tw ? ' tw='. &tw : '') . ':'`
endsnippet

snippet '\bul(ine)?' "underline" r
${1:your text here}
`!p snip.rv = len(t[1])*'-'`
endsnippet

# functional autotrigger
# snippet "^p" "package" rbA
# package ${1:main}
# endsnippet


# in order to use this nippet define these vars
# in your vimrc like --> let g:snip_author="Author Name"
snippet 'sig|head' "my signature" r
------------------------------------------
File:		 ${1:`!p snip.rv = snip.fn`}
Created:	 `!v strftime("%c")`
Last Change: `!v strftime("%c")`
Author:		 `!v g:snips_author`
Site:		 `!v g:snips_site`
e-mail:      `!v g:snips_email`
Twitter:	 `!v g:snips_twitter`
Github:      `!v g:snips_github`
------------------------------------------
${0}
endsnippet


snippet us "replace specials with underscores" w
`!p
import re
snip.rv = re.sub("[^0-9a-zA-Z]", "_", snip.v.text)
`
endsnippet
