priority 2

extends vim

snippet 'sig|head(er)' "file header with change log" r
"        File: ${1:`!p snip.rv = snip.fn`}
"     Created: ". strftime("%c"))
" Last Change: ". strftime("%c"))
"       autor: `!v g:snips_author`
"        site: `!v g:snips_site`
"     twitter: `!v g:snips_twitter`
"       email: `!v g:snips_email`
endsnippet

snippet filename "insert filename" w
`!p snip.rv = snip.fn`
endsnippet

snippet plug "Install new plugin" w
Plug '${1:`xclip -selection clipboard -o`}'
endsnippet

snippet 'com(mand)?' "define a new vim command" !r
command! -nargs=${1:0} ${2:command name} :${3:execution}
endsnippet

snippet 'fun(ction)?' "define a function" r
fun! ${1:function_name}(${2})
	${3:function_body}
endfun
"${0: placeholder ctrl-j}
endsnippet

snippet try "try/finally/endtry" w
try
	${1:what try}
finally
	${2:if so}
endtry
endsnippet

snippet var "define a variable" w
let ${1:var_name} = ${2:assignments} ${0}
endsnippet

snippet gvar "global variable" w
let g:${1:var_name} = ${2:assignments} ${0}
endsnippet

# clearsnippets if

snippet if "conditional test" w
if ${1:test}
	${2:options}
endif
${0:"}
endsnippet


# if you want to delete ! just press space and go to the next
# placeholder
snippet 'ex' "test if something exists" w
if ${1:!}exists("${2:condition}")
	${3:statements}
endif
${0}
endsnippet

snippet com "new command" w
command! -nargs=${1:number_of_args} ${2:other_params} ${2:name} ${2:command}
endsnippet

snippet modeline "Insert modeline" w
" vim:set noet sts=0 sw=4 ts=4 tw=78:
endsnippet
